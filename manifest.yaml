
id: timechaincalendar 
title: "Timechain Calendar"
version: 0.3.54
release-notes: "Initial release of Timechain Calendar for StartOS"
license: MIT
wrapper-repo: "https://github.com/k0gen/timechaincalendar-startos"
upstream-repo: "https://hub.docker.com/r/timechaincalendar/self-hosted"
support-site: "https://github.com/timechainb/timechain-calendar-translations/issues"
marketing-site: "https://timechaincalendar.com"
build: ["make"]
description:
  short: Timechain Calendar provides real-time Bitcoin network data and historical insights.
  long: |
    Timechain Calendar is your real-time window into the Bitcoin network. It not only streams live data but also lets you explore Bitcoinâ€™s past by rewinding through blocks. Additionally, you can estimate future blocks and receive alerts for significant historical days.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
main:
  type: docker
  image: main
  entrypoint: "docker_entrypoint.sh"
  args: []
  mounts:
    main: /root
    cert: /mnt/cert
health-checks:
  web-ui:
    name: Web UI
    success-message: Timechain Calendar is ready
    type: script
config: ~
properties: ~
volumes:
  main:
    type: data
  cert:
    type: certificate
    interface-id: main
interfaces:
  main:
    name: User Interface
    description: Main user interface for interacting with Timechain Calendar in a web browser.
    tor-config:
      port-mapping:
        80: "3000"
        443: "3443"
    lan-config:
      443:
        ssl: true
        internal: 8080
    ui: true
    protocols:
      - tcp
      - http
dependencies: {}
backup:
  create:
    type: docker
    image: compat
    system: true 
    entrypoint: compat 
    args:
      - duplicity
      - create
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup" 
      main: "/root/data"
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /root/data
    mounts:
      BACKUP: "/mnt/backup"
      main: "/root/data"
migrations:
  from:
    "*":
      type: script
      args: ["from"]
  to:
    "*":
      type: script
      args: ["to"]
